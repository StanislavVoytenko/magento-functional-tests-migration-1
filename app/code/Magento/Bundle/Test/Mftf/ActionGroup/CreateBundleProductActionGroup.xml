<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="CreateBasicBundleProduct">
        <annotations>
            <description>Requires Navigation to the Product Creation page. Fills out Name, Sku, and SEO information using the BundleProduct Data Entity. PLEASE NOTE: The Action Group values are Hardcoded.</description>
        </annotations>

        <!--PreReq: Go to bundle product creation page-->
        <!--Product name and SKU-->
        <fillField selector="{{AdminProductFormBundleSection.productName}}" userInput="{{BundleProduct.name}}" stepKey="fillProductName"/>
        <fillField selector="{{AdminProductFormBundleSection.productSku}}" userInput="{{BundleProduct.sku}}" stepKey="fillProductSku"/>

        <!--Trigger SEO drop down-->
        <scrollTo selector="{{AdminProductFormBundleSection.seoDropdown}}" stepKey="scrollToSeoDropDown"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.seoDropdown}}" dependentSelector="{{AdminProductFormBundleSection.urlKey}}" visible="false" stepKey="openDropDownIfClosed"/>
        <waitForPageLoad stepKey="waitForDropDownSEO"/>

        <!--Fill URL input-->
        <fillField userInput="{{BundleProduct.urlKey}}" selector="{{AdminProductFormBundleSection.urlKey}}" stepKey="fillsInSeoLinkExtension"/>
    </actionGroup>

    <actionGroup name="addBundleOptionWithTwoProducts">
        <annotations>
            <description>Requires Navigation to the Product Creation page. Adds Bundle Option with Two Products using the provided arguments. 'x' refers to Bundle option number. 'n' refers to the first number after x.</description>
        </annotations>
        <arguments>
            <argument name="x" type="string"/>
            <argument name="n" type="string"/>
            <argument name="prodOneSku" type="string"/>
            <argument name="prodTwoSku" type="string"/>
            <argument name="optionTitle" type="string"/>
            <argument name="inputType" type="string"/>
        </arguments>

        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems"/>
        <scrollTo selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" stepKey="scrollUpABit"/>
        <click selector="{{AdminProductFormBundleSection.addOption}}" stepKey="clickAddOption"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.bundleOptionXTitle(x)}}" stepKey="waitForOptions"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXTitle(x)}}" userInput="{{optionTitle}}" stepKey="fillTitle"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundleOptionXInputType(x)}}" userInput="{{inputType}}" stepKey="selectType"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.nthAddProductsToOption(n)}}" stepKey="waitForAddBtn"/>
        <click selector="{{AdminProductFormBundleSection.nthAddProductsToOption(n)}}" stepKey="clickAdd"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters1"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters1"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodOneSku}}" stepKey="fillProductSkuFilter1"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters1"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad1" time="30"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct1"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters2"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters2"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodTwoSku}}" stepKey="fillProductSkuFilter2"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters2"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad2" time="30"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct2"/>
        <click selector="{{AdminAddProductsToOptionPanel.addSelectedProducts}}" stepKey="clickAddButton1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '0')}}" userInput="50" stepKey="fillQuantity1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '1')}}" userInput="50" stepKey="fillQuantity2"/>
    </actionGroup>

    <actionGroup name="addBundleOptionWithOneProduct" extends="addBundleOptionWithTwoProducts">
        <annotations>
            <description>Requires Navigation to the Product Creation page. Adds Bundle Option with One Product as specified in arguments. 'x' refers to Bundle option number. 'n' refers to the first number after x.</description>
        </annotations>

        <remove keyForRemoval="openProductFilters2"/>
        <remove keyForRemoval="fillProductSkuFilter2"/>
        <remove keyForRemoval="clickApplyFilters2"/>
        <remove keyForRemoval="waitForFilteredGridLoad2"/>
        <remove keyForRemoval="selectProduct2"/>
        <remove keyForRemoval="selectProduct2"/>
        <remove keyForRemoval="fillQuantity1"/>
        <remove keyForRemoval="fillQuantity2"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '0')}}" userInput="1" stepKey="fillQuantity" after="clickAddButton1"/>
    </actionGroup>

    <actionGroup name="addBundleOptionWithTreeProducts" extends="addBundleOptionWithTwoProducts">
        <annotations>
            <description>Requires Navigation to the Product Creation page. Adds Bundle Option with Three Products using the provided arguments. 'x' refers to Bundle option number. 'n' refers to the first number after x.</description>
        </annotations>
        <arguments>
            <argument name="prodTreeSku" type="string"/>
        </arguments>

        <remove keyForRemoval="fillQuantity1"/>
        <remove keyForRemoval="fillQuantity2"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters3" after="selectProduct2"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters3" after="clickClearFilters3"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodTreeSku}}" stepKey="fillProductSkuFilter3" after="openProductFilters3"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters3" after="fillProductSkuFilter3"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad3" time="30" after="clickApplyFilters3"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct3" after="waitForFilteredGridLoad3"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '0')}}" userInput="1" stepKey="fillQuantity1" after="clickAddButton1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '1')}}" userInput="1" stepKey="fillQuantity2" after="fillQuantity1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '2')}}" userInput="1" stepKey="fillQuantity3" after="fillQuantity2"/>
    </actionGroup>

    <actionGroup name="addBundleOptionWithSixProducts" extends="addBundleOptionWithTwoProducts">
        <annotations>
            <description>Requires Navigation to Product Creation page. Adds Bundle Option with Six Products as specified in arguments. 'x' refers to Bundle option number. 'n' refers to the first number after x.</description>
        </annotations>
        <arguments>
            <argument name="prodTreeSku" type="string"/>
            <argument name="prodFourSku" type="string"/>
            <argument name="prodFiveSku" type="string"/>
            <argument name="prodSixSku" type="string"/>
        </arguments>

        <remove keyForRemoval="fillQuantity1"/>
        <remove keyForRemoval="fillQuantity2"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters3" after="selectProduct2"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters3" after="clickClearFilters3"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodTreeSku}}" stepKey="fillProductSkuFilter3" after="openProductFilters3"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters3" after="fillProductSkuFilter3"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad3" time="30" after="clickApplyFilters3"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct3" after="waitForFilteredGridLoad3"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters4" after="selectProduct3"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters4" after="clickClearFilters4"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodFourSku}}" stepKey="fillProductSkuFilter4" after="openProductFilters4"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters4" after="fillProductSkuFilter4"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad4" time="30" after="clickApplyFilters4"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct4" after="clickApplyFilters4"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters5" after="selectProduct4"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters5" after="clickClearFilters5"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodFiveSku}}" stepKey="fillProductSkuFilter5" after="openProductFilters5"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters5" after="fillProductSkuFilter5"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad5" time="30" after="clickApplyFilters5"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct5" after="waitForFilteredGridLoad5"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFilters6" after="selectProduct5"/>
        <click selector="{{AdminProductGridFilterSection.filters}}" stepKey="openProductFilters6" after="clickClearFilters6"/>
        <fillField selector="{{AdminProductGridFilterSection.skuFilter}}" userInput="{{prodSixSku}}" stepKey="fillProductSkuFilter6" after="openProductFilters6"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickApplyFilters6" after="fillProductSkuFilter6"/>
        <waitForElementNotVisible selector="{{AdminProductGridSection.loadingMask}}" stepKey="waitForFilteredGridLoad6" time="30" after="clickApplyFilters6"/>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectProduct6" after="waitForFilteredGridLoad6"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '0')}}" userInput="2" stepKey="fillQuantity1" after="clickAddButton1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '1')}}" userInput="2" stepKey="fillQuantity2" after="fillQuantity1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '2')}}" userInput="2" stepKey="fillQuantity3" after="fillQuantity2"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '3')}}" userInput="2" stepKey="fillQuantity4" after="fillQuantity3"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '4')}}" userInput="2" stepKey="fillQuantity5" after="fillQuantity4"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '5')}}" userInput="2" stepKey="fillQuantity6" after="fillQuantity5"/>
    </actionGroup>

    <actionGroup name="AdminCreateBundleProductActionGroup">
        <arguments>
            <argument name="bundleProduct"/>
            <argument name="category" type="string"/>
        </arguments>
        <!-- Open Product Grid and Click Add Bundle Product-->
        <amOnPage url="{{ProductCatalogPage.url}}" stepKey="GoToProductCatalog"/>
        <waitForPageLoad stepKey="waitForLoadProductGrid"/>
        <click selector="{{AdminProductGridActionSection.addProductToggle}}" stepKey="clickForChooseCreateInProdType"/>
        <click selector="{{AdminProductGridActionSection.addBundleProduct}}" stepKey="chooseCreateBundleProduct"/>
        <!-- Add Category and SEO-->
        <scrollTo selector="{{AdminProductFormBundleSection.priceField}}" stepKey="scrollToPriceField"/>
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}"
                                    parameterArray="[{{category}}]"
                                    stepKey="searchAndSelectCategory"/>
        <scrollTo selector="{{AdminProductFormBundleSection.seoDropdown}}" stepKey="scrollToSearchEngineOptimisdszateweionTab"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.seoDropdown}}"
                          dependentSelector="{{AdminProductFormBundleSection.urlKey}}"
                          visible="false" stepKey="openDropDownIfClosed"/>
        <fillField userInput="{{bundleProduct.urlKey}}" selector="{{AdminProductFormBundleSection.urlKey}}" stepKey="fillsInSeoLinkExtension"/>
        <!-- Go To General Setting and disable Dynamic SKU, Dynamic Price, Fill Price, Name, SKU. -->
        <scrollTo selector="{{AdminProductFormBundleSection.productName}}" stepKey="scrollProductName"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.dynamicPriceToggle}}"
                          dependentSelector="{{AdminProductFormBundleSection.dynamicPriceToggleOff}}"
                          visible="false"
                          stepKey="disableDynamicPrice"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.dynamicSkuToggle}}"
                          dependentSelector="{{AdminProductFormBundleSection.dynamicSkuToggleOff}}"
                          visible="false"
                          stepKey="disableDynamicSku"/>
        <fillField selector="{{AdminProductFormBundleSection.priceField}}" userInput="{{bundleProduct.price}}" stepKey="fillProductPrice"/>
        <fillField selector="{{AdminProductFormBundleSection.productName}}" userInput="{{bundleProduct.name}}" stepKey="fillProductName"/>
        <fillField selector="{{AdminProductFormBundleSection.productSku}}" userInput="{{bundleProduct.sku}}" stepKey="fillProductSku"/>
    </actionGroup>

    <!-- Select Tax Class For Product -->
    <actionGroup name="AdminCreateBundleProductWithTaxClassActionGroup" extends="AdminCreateBundleProductActionGroup">
              <selectOption selector="{{AdminProductFormBundleSection.taxClassDropDown}}" userInput="{{bundleProduct.tax_class_id}}" stepKey="selectTaxClass"/>
    </actionGroup>

    <!-- Select Tax Class, Stock Status, Visibility, Disable Dynamic Weight And Fill Filed -->
    <actionGroup name="AdminCreateBundleProductWithTaxStockVisibilityAndWeight" extends="AdminCreateBundleProductActionGroup">
        <selectOption selector="{{AdminProductFormBundleSection.taxClassDropDown}}"
                      userInput="{{bundleProduct.tax_class_id}}" stepKey="selectTaxClass"/>
        <selectOption selector="{{AdminProductFormBundleSection.stockStatusField}}"
                      userInput="{{bundleProduct.status}}" stepKey="selectStockStatus"/>
        <selectOption selector="{{AdminProductFormBundleSection.visibilityDropDown}}"
                      userInput="{{bundleProduct.visibility}}" stepKey="selectVisibility"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.dynamicWeightToggle}}"
                          dependentSelector="{{AdminProductFormBundleSection.dynamicWeightToggleOff}}"
                          visible="false"
                          stepKey="disableDynamicWeight"/>
        <fillField selector="{{AdminProductFormBundleSection.weightField}}"
                   userInput="{{bundleProduct.weight}}" stepKey="fillProductWeight"/>
    </actionGroup>

    <!-- Fill Product Description, Disable Dynamic Weight And Fill Filed -->
    <actionGroup name="AdminCreateBundleProductWithDescriptionAndWeight" extends="AdminCreateBundleProductActionGroup">
        <scrollTo selector="{{AdminProductFormBundleSection.weightField}}" stepKey="scrollWeightField"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.dynamicWeightToggle}}"
                          dependentSelector="{{AdminProductFormBundleSection.dynamicWeightToggleOff}}"
                          visible="false"
                          stepKey="disableDynamicWeight"/>
        <fillField selector="{{AdminProductFormBundleSection.weightField}}"
                   userInput="{{bundleProduct.weight}}" stepKey="fillProductWeight"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.contentDropDown}}"
                          dependentSelector="{{AdminProductFormBundleSection.shortDescription}}"
                          visible="false" stepKey="openContentTabIfClosed"/>
        <fillField userInput="{{bundleProduct.description}}" selector="{{AdminProductFormBundleSection.shortDescription}}" stepKey="FillDescription"/>
    </actionGroup>

    <!-- Extensions for Add Price Options in Bundle Options -->
    <actionGroup name="addBundleOptionTwoProductsWithPriceTypeAndValue" extends="addBundleOptionWithTwoProducts">
        <arguments>
            <argument name="prodOnePriceType" type="string"/>
            <argument name="prodTwoPriceType" type="string"/>
            <argument name="prodOnePriceValue" type="string"/>
            <argument name="prodTwoPriceValue" type="string"/>
        </arguments>
        <remove keyForRemoval="fillQuantity1"/>
        <remove keyForRemoval="fillQuantity2"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundlePriceTypeXOptionYProduct(x, '0')}}"
                      userInput="{{prodOnePriceType}}" stepKey="selectFirstPriceType"/>
        <fillField selector="{{AdminProductFormBundleSection.bundlePriceValueXOptionYProduct(x, '0')}}"
                   userInput="{{prodOnePriceValue}}" stepKey="fillFirstPriceValue"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundlePriceTypeXOptionYProduct(x, '1')}}"
                      userInput="{{prodTwoPriceType}}" stepKey="selectSecondPriceType"/>
        <fillField selector="{{AdminProductFormBundleSection.bundlePriceValueXOptionYProduct(x, '1')}}"
                   userInput="{{prodTwoPriceValue}}" stepKey="fillSecondPriceValue"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '0')}}"
                   userInput="1" stepKey="fillNewQuantity1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity(x, '1')}}"
                   userInput="1" stepKey="fillNewQuantity2"/>
    </actionGroup>

    <!-- Add Custom Options In Bundle Product -->
    <actionGroup name="AddProductCustomOptionSelectWithOneValue">
        <arguments>
            <argument name="option"/>
        </arguments>
        <conditionalClick selector="{{AdminProductCustomizableOptionsSection.customizableOptions}}"
                          dependentSelector="{{AdminProductCustomizableOptionsSection.addOptionBtn}}"
                          visible="false" stepKey="openCustomOptionSection"/>
        <click selector="{{AdminProductCustomizableOptionsSection.addOptionBtn}}" stepKey="clickAddOption"/>
        <waitForElementVisible selector="{{AdminProductCustomizableOptionsSection.lastOptionTitle}}" stepKey="waitForOption"/>
        <fillField selector="{{AdminProductCustomizableOptionsSection.lastOptionTitle}}" userInput="{{option.optionTitle}}"
                   stepKey="fillOptionTitle"/>
        <click selector="{{AdminProductCustomizableOptionsSection.lastOptionTypeParent}}" stepKey="openTypeSelect"/>
        <click selector="{{AdminProductCustomizableOptionsSection.optionType(option.optionType)}}" stepKey="selectTypeFile"/>
        <click selector="{{AdminProductCustomizableOptionsSection.addValue}}" stepKey="addFirstValue"/>
        <waitForElementVisible selector="{{AdminProductCustomizableOptionsSection.valueTitle}}" stepKey="waitForElements"/>
        <fillField selector="{{AdminProductCustomizableOptionsSection.valueTitle}}"
                   userInput="{{option.valueTitle}}" stepKey="fillValueTitle"/>
        <fillField selector="{{AdminProductCustomizableOptionsSection.valuePrice}}"
                   userInput="{{option.valuePrice}}" stepKey="fillPrice"/>
        <selectOption selector="{{AdminProductFormBundleSection.priceTypeOptionValue}}"
                      userInput="{{option.valuePriceType}}" stepKey="selectPriceTypeForValue"/>
        <fillField selector="{{AdminProductFormBundleSection.skuOptionValue}}"
                   userInput="{{option.valueSku}}" stepKey="fillSkuValue"/>
    </actionGroup>

</actionGroups>
